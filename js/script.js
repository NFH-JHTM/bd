const day = document.getElementById("day");
const month = document.getElementById("month");
const blackout = document.getElementById("blackout");
const flash = document.getElementById("flash");
const cutsceneText = document.getElementById("cutscene-text");
const audio = document.getElementById("bgm");

const texts = [
  "N∆°i n√†y... t·ª´ng l√† n∆°i ch√∫ng ta c∆∞·ªùi ƒë√πa.",
  "M·ªôt th·ªùi gian t∆∞·ªüng nh∆∞ ch·∫≥ng bao gi·ªù tr√¥i qua.",
  "Nh∆∞ng k·ª∑ ni·ªám... c≈©ng c√≥ ng√†y t√†n.",
  "Kh√¥ng ai r·ªùi ƒëi... ch·ªâ l√† m·ªçi th·ª© d·ª´ng l·∫°i.",
  "V√† r·ªìi... n∆°i n√†y ch√¨m v√†o tƒ©nh l·∫∑ng.",
  "Ch√∫ng ta kh√¥ng th·ªÉ quay l·∫°i...",
  "Nh∆∞ng c√≥ th·ªÉ gi·ªØ l·∫°i m·ªôt ph·∫ßn nh·ªè...",
  "M·ªôt √°nh s√°ng... c·ªßa ƒëi·ªÅu t·ª´ng l√† ƒë·∫πp nh·∫•t.",
  "B·∫°n c√≥ mu·ªën ch·∫°m v√†o k√Ω ·ª©c ƒë√≥ kh√¥ng?"
];

let triggered = false;
let flashClickable = false;
let audioReady = false;
let canPlayMusic = false;

// üîì Unlock autoplay nh·∫°c khi user t∆∞∆°ng t√°c
window.addEventListener("click", () => {
  if (!audioReady) {
    audio.load();
    audioReady = true;
  }
  canPlayMusic = true;
});

// T·∫°o dropdown
for (let i = 1; i <= 31; i++) {
  const opt = document.createElement("option");
  opt.value = i;
  opt.textContent = i;
  day.appendChild(opt);
}
for (let i = 1; i <= 12; i++) {
  const opt = document.createElement("option");
  opt.value = i;
  opt.textContent = `Th√°ng ${i}`;
  month.appendChild(opt);
}

// üé¨ Hi·ªÉn th·ªã text v·ªõi hi·ªáu ·ª©ng "bay m√†u"
function showText(content, delay, showFlash = false) {
  setTimeout(() => {
    const oldText = cutsceneText.textContent.trim();

    if (oldText.length > 0) {
      // üî• Bay m√†u t·ª´ng k√Ω t·ª±
      const chars = oldText.split("");
      cutsceneText.innerHTML = "";
      chars.forEach((char, index) => {
        const span = document.createElement("span");
        span.textContent = char;
        span.classList.add("char-out");

        span.style.setProperty("--x", `${Math.random() * 60 - 30}px`);
        span.style.setProperty("--y", `${-60 - Math.random() * 40}px`);
        span.style.setProperty("--r", `${Math.random()}turn`);
        span.style.animationDelay = `${index * 20}ms`;
        cutsceneText.appendChild(span);
      });

      cutsceneText.classList.remove("show");
      cutsceneText.classList.add("hide");
    }

    setTimeout(() => {
      cutsceneText.innerHTML = content
        .split("")
        .map(char => `<span class="char-in">${char}</span>`)
        .join("");

      cutsceneText.classList.remove("hide");
      cutsceneText.classList.add("show");

      if (showFlash) {
        flash.classList.add("show");

        // ‚è±Ô∏è Cho ph√©p click flash sau 2s
        setTimeout(() => {
          flashClickable = true;
        }, 2000);
      }
    }, oldText.length > 0 ? 1500 : 0);
  }, delay);
}

function checkBirthday() {
  if (triggered) return; // Ng·ª´ng n·∫øu ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t

  if (parseInt(day.value) === 13 && parseInt(month.value) === 4) {
    triggered = true;
    day.disabled = true;
    month.disabled = true;

    // T·∫Øt nh·∫°c n·∫øu c√≥
    if (!bgm2.paused) {
      bgm2.pause();
      bgm2.currentTime = 0;
    }

    // Hi·ªÉn th·ªã blackout
    blackout.classList.add("show");

    // Ch·∫°y ƒëo·∫°n c·∫Øt c·∫£nh
    runCutscene(); // ƒê·∫£m b·∫£o r·∫±ng function n√†y ch·∫°y sau khi s·ª± ki·ªán n√†y x·∫£y ra.
  }
}



    // üéµ Ph√°t nh·∫°c
    setTimeout(() => {
      if (audioReady && canPlayMusic) {
        audio.volume = 0.4;
        audio.play().catch((e) => {
          console.warn("Autoplay b·ªã ch·∫∑n", e);
        });
      }
    }, 500);

    // Cutscene chill d√†i h∆°n
    showText(texts[0], 2000);
    showText(texts[1], 8000);
    showText(texts[2], 14000);
    showText(texts[3], 20000);
    showText(texts[4], 26000);
    showText(texts[5], 32000);
    showText(texts[6], 38000);
    showText(texts[7], 45000, true);
    showText(texts[8], 51000);
  }
}

day.addEventListener("change", checkBirthday);
month.addEventListener("change", checkBirthday);

// ‚≠ê Flash click
flash.addEventListener("click", () => {
  if (!flashClickable) return;

  // T·∫Øt nh·∫°c
  audio.pause();
  audio.currentTime = 0;

  flash.classList.add("zoom-fullscreen");

  setTimeout(() => {
    window.location.href = "https://www.roblox.com/games/103960960602294/Untitled-Game";
  }, 1300);
});

const preloader = document.getElementById("preloader");
const loadingText = document.querySelector(".loading-text");
const continueText = document.querySelector(".continue-text");
const bgm2 = document.getElementById("bgm2");

window.addEventListener("load", () => {
  // Sau 2.5s loading xong
  setTimeout(() => {
    loadingText.style.display = "none";
    continueText.style.display = "block";

    // Ch·ªù user b·∫•m ph√≠m b·∫•t k·ª≥
    window.addEventListener("keydown", () => {
      preloader.classList.add("hide");

      // Ph√°t nh·∫°c khi v√†o trang
      setTimeout(() => {
        try {
          bgm2.volume = 0.4;
          bgm2.play();
        } catch (e) {
          console.warn("Autoplay b·ªã ch·∫∑n!", e);
        }
        preloader.remove();
      }, 1500); // delay nh·∫π sau m·ªü c·ª≠a
    }, { once: true });
  }, 2500); // th·ªùi gian loading gi·∫£
});
