const day = document.getElementById("day");
const month = document.getElementById("month");
const blackout = document.getElementById("blackout");
const flash = document.getElementById("flash");
const cutsceneText = document.getElementById("cutscene-text");
const audio = document.getElementById("bgm");

const texts = [
  "N∆°i n√†y... t·ª´ng l√† n∆°i ch√∫ng ta c∆∞·ªùi ƒë√πa.",
  "M·ªôt th·ªùi gian t∆∞·ªüng nh∆∞ ch·∫≥ng bao gi·ªù tr√¥i qua.",
  "Nh∆∞ng k·ª∑ ni·ªám... c≈©ng c√≥ ng√†y t√†n.",
  "Kh√¥ng ai r·ªùi ƒëi... ch·ªâ l√† m·ªçi th·ª© d·ª´ng l·∫°i.",
  "V√† r·ªìi... n∆°i n√†y ch√¨m v√†o tƒ©nh l·∫∑ng.",
  "Ch√∫ng ta kh√¥ng th·ªÉ quay l·∫°i...",
  "Nh∆∞ng c√≥ th·ªÉ gi·ªØ l·∫°i m·ªôt ph·∫ßn nh·ªè...",
  "M·ªôt √°nh s√°ng... c·ªßa ƒëi·ªÅu t·ª´ng l√† ƒë·∫πp nh·∫•t.",
  "B·∫°n c√≥ mu·ªën ch·∫°m v√†o k√Ω ·ª©c ƒë√≥ kh√¥ng?"
];

let triggered = false;
let flashClickable = false;
let audioReady = false;
let canPlayMusic = false;

// üîì Unlock autoplay khi user click b·∫•t k·ª≥ l·∫ßn ƒë·∫ßu
window.addEventListener("click", () => {
  if (!audioReady) {
    audio.load();
    audioReady = true;
  }
  canPlayMusic = true;
});

// T·∫°o dropdown ng√†y/th√°ng
for (let i = 1; i <= 31; i++) {
  const opt = document.createElement("option");
  opt.value = i;
  opt.textContent = i;
  day.appendChild(opt);
}
for (let i = 1; i <= 12; i++) {
  const opt = document.createElement("option");
  opt.value = i;
  opt.textContent = `Th√°ng ${i}`;
  month.appendChild(opt);
}

// Hi·ªán t·ª´ng ƒëo·∫°n tho·∫°i
function showText(content, delay, showFlash = false) {
  setTimeout(() => {
    cutsceneText.classList.remove("show");
    cutsceneText.classList.add("hide");

    setTimeout(() => {
      cutsceneText.textContent = content;
      cutsceneText.classList.remove("hide");
      cutsceneText.classList.add("show");

      if (showFlash) {
        flash.classList.add("show");
      }
    }, 1500);
  }, delay);
}

// Check ƒë√∫ng ng√†y sinh
function checkBirthday() {
  if (triggered) return;
  if (parseInt(day.value) === 13 && parseInt(month.value) === 4) {
    triggered = true;
    day.disabled = true;
    month.disabled = true;

    blackout.classList.add("show");

    // üéµ Nh·∫°c ph√°t sau blackout
    setTimeout(() => {
      if (audioReady && canPlayMusic) {
        audio.volume = 0.4;
        audio.play().catch((e) => {
          console.warn("Autoplay b·ªã ch·∫∑n sau blackout", e);
        });
      }
    }, 500);

    // üï∞Ô∏è Cutscene d√†i h∆°n
    showText(texts[0], 2000);
    showText(texts[1], 7000);
    showText(texts[2], 12000);
    showText(texts[3], 17000);
    showText(texts[4], 22000);
    showText(texts[5], 27000);
    showText(texts[6], 32000);
    showText(texts[7], 38000, true);
    showText(texts[8], 43000);

    setTimeout(() => {
      flashClickable = true;
    }, 44000);
  }
}

day.addEventListener("change", checkBirthday);
month.addEventListener("change", checkBirthday);

// üåü Khi nh·∫•n ƒë·ªëm s√°ng ‚Üí zoom + t·∫Øt nh·∫°c + chuy·ªÉn tab
flash.addEventListener("click", () => {
  if (!flashClickable) return;

  audio.pause();
  audio.currentTime = 0;

  flash.classList.add("zoom-fullscreen");

  setTimeout(() => {
    window.location.href = "next.html";
  }, 1300);
});
